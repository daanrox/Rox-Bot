@tree.command(guild=discord.Object(id=id_do_servidor), name='play', description='Tocar música no canal de voz')
async def play_command(interaction: discord.Interaction):
    member = interaction.guild.get_member(interaction.user.id)
    if member.voice is None or member.voice.channel is None:
        await interaction.response.send_message('Você precisa estar em um canal de voz para usar este comando.', ephemeral=True)
        return

    # Autenticar com as credenciais do Spotify
    client_credentials_manager = SpotifyClientCredentials(client_id=spotify_client_id, client_secret=spotify_client_secret)
    spotify_sp = spotipy.Spotify(client_credentials_manager=client_credentials_manager)

    playlist_url = 'https://open.spotify.com/playlist/7o2vITC5zG5KCM7Ux8heWe'

    channel = member.voice.channel
    if channel:
        voice_client = await channel.connect()

        try:
            playlist = spotify_sp.playlist_tracks(playlist_url)
        except Exception as e:
            print(f"Erro ao buscar a playlist do Spotify: {e}")
            await interaction.response.send_message('Erro ao buscar a playlist do Spotify.', ephemeral=True)
            return

        async def play_tracks():
            for track in playlist['items']:
                track_name = track['track']['name']
                artist_name = track['track']['artists'][0]['name']
                track_id = track['track']['id']

                # Obter informações detalhadas da faixa para acessar o link completo
                track_info = spotify_sp.track(track_id)
                
                if 'external_urls' in track_info and 'spotify' in track_info['external_urls']:
                    full_track_url = track_info['external_urls']['spotify']
                    print(f"Faixa: {track_name}\nLink Completo: {full_track_url}\n")

                    if full_track_url:
                        # Reproduzir a faixa usando o link completo
                        voice_client.play(discord.FFmpegPCMAudio(full_track_url))
                        while voice_client.is_playing():
                            await asyncio.sleep(1)
                else:
                    print(f"Dados da faixa incompletos ou ausentes: {track}")

        await play_tracks()

        await interaction.response.send_message("Playlist reproduzida com sucesso!")
    else:
        await interaction.response.send_message("Você precisa estar em um canal de voz para usar este comando.")